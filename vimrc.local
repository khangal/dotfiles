set relativenumber
" set hlsearch
set background=dark
colorscheme solarized

set complete=.,w,b,u,t

":1 Mappings
nmap <Leader>ci :source ~/.vimrc.local<cr>
nmap <Leader>bi :source ~/.vimrc.local<cr>:PlugInstall<cr>
map <C-s> <esc>:w<CR>
imap <C-s> <esc>:w<CR>
map <Leader>vi :tabe ~/.vimrc.local<CR>
map <Leader>vb :tabe ~/.vimrc.bundles.local<CR>
map <Leader>da :tabe ~/.cheatsheet.markdown<CR>
map <Leader>q :tabe ~/.ideas.markdown<CR>
map <Leader>ee :tabe ~/.examples.exs<CR>
map <Leader>ep :tabe ~/.examples.py<CR>
map <Leader>ec :tabe ~/.examples.css<CR>
map <C-h> :nohl<cr>


if !exists(":Iex")
  command! Iex Dispatch !iex -S mix
  " command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!
  " nnoremap \ :Ag<SPACE>
endif

" Fix Ubuntu 16.04 move cursor by word in CmdLine mode
cnoremap [1;5D <C-Left>
cnoremap [1;5C <C-Right>

" Emacs-like beginning and end of line.
imap <c-e> <c-o>$
imap <c-a> <c-o>^

imap <C-k> <CR><c-o>O
command! Q q " Bind :Q to :q

" Execute macro in q
map Q @q

map <Leader>p :set paste<CR><esc>"+p:set nopaste<cr>:retab<cr>
vnoremap <C-c> "+y

" bind K to grep word under cursor
" nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" endfold
":2 Stylus compile
" augroup StylusCompile
"   autocmd FileType stylus
"     \ autocmd! StylusCompile BufWritePost <buffer> !stylus -u nib -u rupture --include-css -p "%" > "%:r"; sed -i -e '1i/* Generated by Stylus '`stylus --version`' */\' "%:r"
" augroup END
" endfold
":1 Library configs

" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

":2 Ultisnippets
let g:UltiSnipsExpandTrigger="<s-tab>"
let g:UltiSnipsJumpForwardTrigger="<s-tab>"

":2 Enable Emmet just for HTML/CSS/ERB
let g:user_emmet_install_global = 0
autocmd FileType html,css,javascript,eruby,eco,php,htmljinja,eelixir EmmetInstall

let g:user_emmet_expandabbr_key = '<C-l>'
let g:user_emmet_complete_tag = 1

":2 ALE
let g:ale_lint_on_enter = 0
let g:ale_lint_on_text_changed = "never"
let g:ale_lint_on_save = 0
let g:ale_python_flake8_options = "--max-line-length=100 --inline-quotes '\"' ."
autocmd FileType elixir ALEDisable
nmap <silent> <Leader>k <Plug>(ale_previous_wrap)
nmap <silent> <Leader>j <Plug>(ale_next_wrap)
" endfold

autocmd FileType yaml setlocal foldmethod=indent
autocmd FileType yaml setlocal foldlevel=1
autocmd FileType html,htmljinja setlocal textwidth=140
autocmd FileType python setlocal textwidth=100
autocmd FileType python nmap <Leader>t :!python %<cr>

":1 Folding
augroup vimrc
  autocmd!
augroup END

if filereadable($HOME . "/dotfiles-munkhbaatar/filetypes.vim")
  source ~/dotfiles-munkhbaatar/filetypes.vim
endif
